<?php
function rus2translit($string) {
    $converter = array(
        'а' => 'a',   'б' => 'b',   'в' => 'v',
        'г' => 'g',   'д' => 'd',   'е' => 'e',
        'ё' => 'e',   'ж' => 'zh',  'з' => 'z',
        'и' => 'i',   'й' => 'y',   'к' => 'k',
        'л' => 'l',   'м' => 'm',   'н' => 'n',
        'о' => 'o',   'п' => 'p',   'р' => 'r',
        'с' => 's',   'т' => 't',   'у' => 'u',
        'ф' => 'f',   'х' => 'h',   'ц' => 'c',
        'ч' => 'ch',  'ш' => 'sh',  'щ' => 'sch',
        'ь' => '\'',  'ы' => 'y',   'ъ' => '\'',
        'э' => 'e',   'ю' => 'yu',  'я' => 'ya',

        'А' => 'A',   'Б' => 'B',   'В' => 'V',
        'Г' => 'G',   'Д' => 'D',   'Е' => 'E',
        'Ё' => 'E',   'Ж' => 'Zh',  'З' => 'Z',
        'И' => 'I',   'Й' => 'Y',   'К' => 'K',
        'Л' => 'L',   'М' => 'M',   'Н' => 'N',
        'О' => 'O',   'П' => 'P',   'Р' => 'R',
        'С' => 'S',   'Т' => 'T',   'У' => 'U',
        'Ф' => 'F',   'Х' => 'H',   'Ц' => 'C',
        'Ч' => 'Ch',  'Ш' => 'Sh',  'Щ' => 'Sch',
        'Ь' => '\'',  'Ы' => 'Y',   'Ъ' => '\'',
        'Э' => 'E',   'Ю' => 'Yu',  'Я' => 'Ya',
    );
    return strtr($string, $converter);
}
function str2url($str) {
    // переводим в транслит
    $str = rus2translit($str);
    // в нижний регистр
    $str = strtolower($str);
    // заменям все ненужное нам на "-"
    $str = preg_replace('/[^a-z0-9]+/u', '', $str);
    // удаляем начальные и конечные '-'
    $str = trim($str, "-");
    return $str;
}
/*
https://github.com/shuchkin/simplexlsx
 */
require_once './simple-xlsx.php';

//Создаем объект из файла
$xlsx = SimpleXLSX::parse('shedule.xlsx');

//Инициализация нужных переменных
$timetable = array();
$excell_num = array();

//Создание массива строк из объекта
$rows = $xlsx->rowsEx();

//Проход по каждой строке
foreach ($rows as $row) {
    //Проход по каждой ячейке
    foreach ($row as $cell) {
        //Получение значения текущей ячейки (в $cell также содержатся мета-данные)
        $active_cell = $cell['value'];
        //Регулярка для названия группы
        $all_group_preg = '/\w{4}\-\d{2}\-\d{2}/ui';

        /*
            Механизм парсинга основан на том, что расписание имеет однотипную структуру:
                под названием группы идут предметы, а в следующих трех ячейках справа данные, которые относятся к этому предмеету (преподаватель, аудитория, тип пары)

            */

        //Если текущая ячейка является названием группы
        if (preg_match($all_group_preg, $active_cell, $matches) === 1) {
            //Создание массива нормальных названий (как в самом расписании)
            $groups_name[str2url($matches[0])] = $matches[0];
            //Сохранения названия группы
            $group_name = mb_strtolower($matches[0]);
            //Название группы латиницей
            $group_id = str2url($group_name);
            //Название группы без цифр
            $group_name = explode('-', $group_name);
            //Создание регулярного выражения для конкретной группы
            $groups[$group_id] = '/^' . $group_name[0] . '\-' . $group_name[1] . '\-' . $group_name[2] . '/ui';
            //Номер столбца с названием грууппы
            preg_match('/^[a-z]{1,2}/ui', $cell['name'], $matches);

            //По итогу получаем массив с названием группы, названием латиницей, номер столбца и пустой массив с расписанием
            $timetable[] = array(
                'group_name' => $cell['value'],
                'group_id' => $group_id,
                'cell' => $matches[0] . '2',
                'shedule' => array()
            );
        }
    }
}

//Получение номеров всех столбцов
foreach ($rows[1] as $key => $value) {
    $excell_num[$value['name']] = $key;

    /*
        [
            'AA1' = 0,
            'AA2' = 1,
            'AA3' = 2,
            ...
            'AB1' = 45,
            'AB2' = 46,
            'AB3' = 47,
        ]
        */
}

//Расписание звонков
$calls = array('9:00-10:30', '10:40-12:10', '13:10-14:40', '14:50-16:20', '16:30-18:00', '18:10-19:40');

//Проход по каждой группе
foreach ($timetable as $key => $group) {

    //Сохранение названия столбца с группой в переменную (AA2 или  BA2)
    $cell = $group['cell'];
    $even = 0; //Четный
    $odd = 0;  //Нечетныйы

    //Так как предметы идут с 3 строчки по 74, то мы пробегаемся именно от 3  до 74
    for ($i = 3; $i < 75; $i++) {

        //Получение данных из конкретной ячейки
        /*
            Тут стоит пояснить, что библиотека, используемая для парсинга, отдает строки примерно в таком виде: 
            [
                [
                    'name' => 'AA1',
                    'value' => *значение ячейки*,
                    *прочие мета-данные*
                ],
                [
                    'name' => 'AA2',
                    'value' => *значение ячейки*,
                    *прочие мета-данные*
                ],
                [
                    'name' => 'AA2',
                    'value' => *значение ячейки*,
                    *прочие мета-данные*
                ],
                ...
                ,
                [
                    'name' => 'AB1',
                    'value' => *значение ячейки*,
                    *прочие мета-данные*
                ],
                [
                    'name' => 'AB2',
                    'value' => *значение ячейки*,
                    *прочие мета-данные*
                ]
            ];
            */

        $object = $rows[$i][$excell_num[$cell]]['value'];
        //По итогу полечаем значение ячейки из нужного столбца под названием группы, то есть с пердметом

        $lesson = array(
            array(
                'cl_info' => '', //Полное значение ячейки, н
                'title' => array(), //Названия предметов из ячейки
                'week' => array(), //Номера недель,  когда идут эти  предметы
                'week_full' => true, //Булевое значение, если указаны не номера недель, а все, КРОМЕ
                'type' => '', //Тип предмета (лекция, практика и тд)
                'teacher' => '', //Имя преподавателя
                'class' => '', //Аудитория
                'day' => 0,  //Номер для недели, когда этот предмет стоит
                'num' => 0, //Номер пары
                'parity' => 0 //Четность неделидля предмета
            )
        );

        $title = array();
        $week = array();

        //Разделяем ячейку по переносу строку, если в ячейке более одного предмета
        foreach (preg_split('/\n/ui', $object) as $num => $cl_info) {
            //Если в следующей ячейке справа более одной строки, 
            if (count(preg_split('/\n/ui', $rows[$i][$excell_num[$cell] + 1]['value'])) > 1) {
                //Если для каждого предмета существует тип предмета (иногда на два разных предмета указывается один тип)
                if (isset((preg_split('/\n/ui', $rows[$i][$excell_num[$cell] + 1]['value']))[$num])) {
                    //Записываем тип предмета
                    $lesson[$num]['type'] = (preg_split('/\n/ui', $rows[$i][$excell_num[$cell] + 1]['value']))[$num];
                } else {
                    //Если указано два преедмета, а тип пары указан только один
                    $lesson[$num]['type'] = 'Не указано';
                }
            } else {
                //Если предмет только один, то просто записываем его тип из ячейки  справа
                $lesson[$num]['type'] = '' . $rows[$i][$excell_num[$cell] + 1]['value'] . '';
            }

            //Такая же логика, как и с типов предмета, только на две ячейкисправа и сучителем
            if (count(preg_split('/\n/ui', $rows[$i][$excell_num[$cell] + 2]['value'])) > 1) {
                $lesson[$num]['teacher'] = (preg_split('/\n/ui', $rows[$i][$excell_num[$cell] + 2]['value']))[$num];
            } else {
                $lesson[$num]['teacher'] = '' . $rows[$i][$excell_num[$cell] + 2]['value'] . '';
            }

            //Записываем аудиторию (три ячейкисправа)
            //Тут есть баг, связанный с тем, что иногда указают две аудитории для двух разных предметов, а скрипт разделяет предметы, но не аудитории. Нужно добавить такую же логику, как и с типом пар или учителями
            $lesson[$num]['class'] = $rows[$i][$excell_num[$cell] + 3]['value'];

            //Строка, которая в зависимости от $i вычесляет номер дня недели
            $lesson[$num]['day'] = (($i - 2) % 12 === 0) ? intdiv(($i - 2), 12) : (intdiv(($i - 2), 12)) + 1;

            //Номер пары
            $lesson[$num]['num'] = ($i % 2 === 0) ? $even + 1 : $odd + 1;

            //Четность пары
            $lesson[$num]['parity'] = (($i - 2) % 2) === 1 ? 1 : 2;

            //Обрезаем пробеля и сохраняем данные из ячейки (для дебага)
            $cl_info = trim($cl_info);
            $lesson[$num]['cl_info'] = $cl_info;

            //Если существует приписка КР, то меняем $week_full на false, что будет означать, что предмет идет во все недели, кроме тех, что в массиве
            preg_match_all('/^кр /ui', $object, $matches);
            if (count($matches[0]) !== 0) {
                $lesson[$num]['week_full'] = false;
            } else {
                $lesson[$num]['week_full'] = true;
            }
            unset($matches);

            //Очищаем строку от приписки КР, чтобы легче было выцепить номера недель
            $cl_info = preg_replace('/^кр /ui', '', $cl_info);

            //Выцепляем строку с номерами недель с помощью регулярки
            preg_match_all('/[0-9,]{1,} ?н/ui', $cl_info, $matches);

            //Если номера недель вообще указаны, то...
            if (count($matches[0]) !== 0) {
                //Выцепляем именно номера
                preg_match_all('/\d{1,2}/iu', $matches[0][0], $week_matches);
                //Переводим их в целочисленные значения
                $week_matches[0] = array_map('intval', $week_matches[0]);
                //Записываем
                $lesson[$num]['week'] = $week_matches[0];
                unset($week_matches);
            } else {
                $lesson[$num]['week'] = '';
            }
            unset($matches);

            //Очищаем строку от номеров недель
            $cl_info = preg_replace('/[0-9,]{1,} ?н/ui', '', $cl_info);
            //Выцепляем названия предметов, если они есть
            preg_match_all('/[^н0-9 ]{1}[а-яa-z 0-9\/]+/ui', $cl_info, $matches);
            if (count($matches[0]) !== 0) {
                $lesson[$num]['title'] = trim($matches[0][0]);
            } else {
                $lesson[$num]['title'] = '';
            }
        };
        //Устаревший код
        /* $day_data = array(
                'title' => $title,
                'type' => $rows[$i][$excell_num[$cell] + 1]['value'],
                'teacher' => $rows[$i][$excell_num[$cell] + 2]['value'],
                'class' => '' . $rows[$i][$excell_num[$cell] + 3]['value'] . '',
                'week' => $week,
                'day' => (($i - 2) % 12 === 0) ? intdiv(($i - 2), 12) : (intdiv(($i - 2), 12)) + 1,
                'num' => ($i % 2 === 0) ? $even + 1 : $odd + 1,
                'parity' => (($i - 2) % 2) === 1 ? 1 : 2
            );
            $timetable[$key]['shedule'][(($i - 2) % 12 === 0) ? intdiv(($i - 2), 12) : (intdiv(($i - 2), 12)) + 1][] = $day_data; */
        //В соответствии с номером пары, записываем все, что мы  распарсили
        $timetable[$key]['new_shedule'][(($i - 2) % 12 === 0) ? intdiv(($i - 2), 12) : (intdiv(($i - 2), 12)) + 1][] = $lesson;

        //Механизм сброса переменных для правильного определения номера пары
        ($i % 2 === 0) ? $even++ : $odd++;
        ($even >= 6) ? $even = 0 : $even;
        ($odd >= 6) ? $odd = 0 : $odd;
    }
}
$_SESSION['calls'] = $calls;
$_SESSION['timetable'] = $timetable;
